{% comment %}
Look in `_data/works` and return this book's metadata
as a set of Liquid variables that we can use on pages
as output tags, e.g. {{ title }} for the current
book's title.
{% endcomment %}

{% comment %}Don't do all this work if metadata
is already loaded on this page.{% endcomment %}
{% if metadata-loaded %}
{% else %}

{% assign build = "development" %}
{% if site.build and site.build != "" %}
    {% assign build = site.build %}
{% endif %}

{% capture output-format %}{{ site.output }}{% endcapture %}

{% comment %}
Assign project information to variables. This is the same for all books in the project.
These values can be overridden in _data/locales.yml for translations.
{% endcomment %}

{% capture project-organisation %}{{ site.data.project.organisation }}{% endcapture %}
{% capture project-url %}{{ site.data.project.url }}{% endcapture %}
{% capture project-email %}{{ site.data.project.email }}{% endcapture %}
{% capture project-name %}{{ site.data.project.name }}{% endcapture %}
{% capture project-description %}{{ site.data.project.description }}{% endcapture %}
{% capture project-logo %}{{ site.data.project.logo }}{% endcapture %}
{% capture project-image %}{{ site.data.project.image }}{% endcapture %}
{% capture project-credit %}{{ site.data.project.credit }}{% endcapture %}
{% capture project-language %}{{ site.data.project.language }}{% endcapture %}
{% capture project-app-id %}{{ site.data.project.app-id }}{% endcapture %}
{% capture project-version %}{{ site.data.project.version }}{% endcapture %}

{% comment %} Also use project language as default, fallback language,
which will be overridden below if we're on book pages.
Fallback to language in config, then to en. {% endcomment %}
{% if site.data.project.language and site.data.project.language != "" %}
    {% capture language %}{{ site.data.project.language }}{% endcapture %}
{% elsif site.language %}
    {% capture language %}{{ site.language }}{% endcapture %}
{% else %}
    {% capture language %}en{% endcapture %}
{% endif %}

{% comment %}
...But if a build-language is set in _config, that takes precedence
and overrides the project language in `_data/project.yml` as the default.
{% endcomment %}
{% if site.build-language and site.build-language != "" %}
    {% capture language %}{{ site.build-language }}{% endcapture %}
{% endif %}

{% comment %}
It's useful to know how many books are in this project.
This does assume that every folder in _data/works is a book.
We may want to extend this to check, say, for a default.yml file.
{% endcomment %}
{% assign number-of-works = site.data.works | size %}

{% comment %}Get an array of the book directories.
Useful for checking whether we're in a real book directory.{% endcomment %}
{% assign book-directory-array = "" | split: "|" %}
{% for work in site.data.works %}
    {% assign book-directory-array = book-directory-array | push: work[0] %}
{% endfor %}

{% comment %}
Get the directory for this book only
We'll rewrite this later if we're in a translation
{% endcomment %}

{% capture book-directory %}{{ page.path | replace: "/", " " | truncatewords: 1, "" }}{% endcapture %}

{% comment %}Are we really in a listed book directory, or a directory
in the root that isn't really a listed book?{% endcomment %}
{% assign is-book-directory = false %}
{% for directory in book-directory-array %}
    {% if book-directory == directory %}
        {% assign is-book-directory = true %}
    {% endif %}
{% endfor %}

{% comment %}Get the current directory name.{% endcomment %}

{% comment %} If the page is an index.html page, we need to add 'index',
because Jekyll's page.url for index.html is / {% endcomment %}
{% if page.url contains ".html" %}
    {% capture page-url %}{{ page.url }}{% endcapture %}
{% else %}
    {% capture page-url %}{{ page.url }}index.html{% endcapture %}
{% endif %}
{% comment %}Remove any file extensions, then create an array of what's left{% endcomment %}
{% if page.url contains "." %}
    {% assign url-as-array = page-url | split: "." %}
    {% assign url-as-array = url-as-array | first | remove_first: "/" | split: "/" %}
{% else %}
    {% assign url-as-array = page-url | remove_first: "/" | split: "/" %}
{% endif %}
{% assign url-as-array-size = url-as-array | size %}

{% if url-as-array-size < 2 %}
    {% capture current-directory %}{{ url-as-array[0] }}{% endcapture %}
{% else %}
    {% capture current-directory %}{{ url-as-array[-2] }}{% endcapture %}
{% endif %}

{% comment %}
Get the current file's name
{% endcomment %}

{% capture current-file %}{{ url-as-array.last }}{% endcapture %}
{% if current-file == "" or current-file == "index.html" %}
    {% capture current-file %}index{% endcapture %}
{% endif %}

{% comment %}
Get this file's folder depth
(The minus 1 avoids counting the file itself)
{% endcomment %}
{% assign folder-depth = page.path | split: "/" | size | minus: 1 %}

{% comment %}
Check whether we're in a subdirectory of the book directory
{% endcomment %}
{% capture book-subdirectory %}{{ page.path | replace: "/", " " | truncatewords: 2, "" | split: " " | last }}{% endcapture %}
{% comment %}Discard that if it's a filename, like search.md.{% endcomment %}
{% if book-subdirectory contains "." %}
    {% capture book-subdirectory %}{% endcapture %}
{% endif %}
{% assign is-book-subdirectory = false %}
{% if book-directory-array contains book-directory and page.path contains book-directory and page.path contains book-subdirectory and page.path contains "/" and page.path contains current-file and folder-depth > 1 %}
    {% assign is-book-subdirectory = true %}
{% endif %}

{% comment %}Set default stylesheets{% endcomment %}
{% capture print-pdf-stylesheet %}print-pdf.css{% endcapture %}
{% capture screen-pdf-stylesheet %}screen-pdf.css{% endcapture %}
{% capture web-stylesheet %}web.css{% endcapture %}
{% capture epub-stylesheet %}epub.css{% endcapture %}
{% capture app-stylesheet %}app.css{% endcapture %}

{% comment %}
Now capture each metadata value as a Liquid variable, to be used in HTML
and book content as a Liquid output tag e.g. {{ title }}
We do this with the template/metadata-work.html include.
{% endcomment %}

{% if is-book-directory %}
    {% include metadata-work.html %}
{% endif %}

{% comment %} Set the parent language now before we override `language`. {% endcomment %}
{% capture parent-language %}{{ language }}{% endcapture %}

{% comment %} Create an array for translations.{% endcomment %}
{% assign translations = "" | split: "" %}

{% comment %} We need to know into which languages parts of this project
have been translated into. A translation is registered here if:
    (a) at least one book folder contains a translation
    (b) that language is active/uncommented in _data/locales.yml.

For book directories, we loop through the current book's _data/works/[book]
files and subfolders. Subfolders are usually for translations.
Inside each subfolder, return any language code from locales.yml
that matches a language folder in the book's _data/works folder.
These matches can be safely assumed to be translations of the work.
Then put those language codes in an array, `translations`.

For non-book directories, we include any languages with an active
language in _data/locales.yml. This means we can just translate
our landing page and still get it registered as a translation.

{% endcomment %}

{% if is-book-directory %}

    {% assign work = site.data.works.[book-directory] %}
    {% for file-or-folder in work %}
        {% for locale-language in site.data.locales %}
            {% if file-or-folder[0] == locale-language[0] %}
                {% assign translations = translations | push: locale-language[0] %}
            {% endif %}
        {% endfor %}
    {% endfor %}

{% else %}

    {% for locale-language in site.data.locales %}
        {% unless locale-language[0] == parent-language %}
            {% assign translations = translations | push: locale-language[0] %}
        {% endunless %}
    {% endfor %}

{% endif %}

{% comment %}
Detect if this page is a translation.
Look through the translations list. If this page is in a book-subdirectory
that matches a translation language, set is-translation to true.
Note that this is fragile: a directory name might not match the language code directly,
e.g. language code `en-GB`, but directory `en`. This test will fail in that case.
We may need something more robust for hyphenated language codes in non-hyphenated`
translation-directory names.
{% endcomment %}
{% assign this-translation = translations | where_exp: "lang", "lang == book-subdirectory" %}
{% if this-translation[0] == book-subdirectory %}
    {% assign is-translation = true %}
{% endif %}

{% comment %}
Also check if we're in a root translation subdirectory,
e.g. this is fr/index.md
{% endcomment %}
{% for translation-language in translations %}
    {% if folder-depth == 1 and current-directory == translation-language %}
        {% assign is-translation = true %}
        {% assign is-translation-root-directory = true %}
        {% capture language %}{{ translation-language }}{% endcapture %}
        {% if page.name == "index.md" %}
            {% assign is-translation-homepage = true %}
        {% endif %}
    {% endif %}
{% endfor %}

{% comment %}
If we are in a translation, rewrite book metadata where it's been
defined in `_data/works` for the given translation.
{% endcomment %}

{% if is-book-directory and book-subdirectory and book-subdirectory != "" and is-translation == true %}

    {% assign work = site.data.works[book-directory][book-subdirectory] %}
    {% include metadata-work.html work=work %}

{% endif %}

{% comment %}If a variant is enabled in settings,
override any metadata set for that variant.{% endcomment %}

{% comment %}First, though, set variant-toc to false as default{% endcomment %}
{% assign variant-toc = false %}

{% comment %} By default, set the active-variant to 'default' {% endcomment %}
{% capture variant %}default{% endcapture %}

{% if site.data.settings.active-variant and site.data.settings.active-variant != "" %}

    {% capture variant %}{{ site.data.settings.active-variant }}{% endcapture %}

    {% if is-book-directory %}
        {% if book-subdirectory and book-subdirectory != "" and is-translation == true %}
            {% assign work = site.data.works[book-directory][book-subdirectory] %}
            {% include metadata-work.html work-variant=variant work=work %}
        {% else %}
            {% include metadata-work.html work-variant=variant %}
        {% endif %}
    {% endif %}

    {% comment %}Get variant settings from settings{% endcomment %}
    {% assign variant-settings = site.data.settings.variants | where: "variant", variant %}
    {% for setting in variant-settings %}
        {% capture print-pdf-stylesheet %}{{ setting.print-pdf-stylesheet }}{% endcapture %}
        {% capture screen-pdf-stylesheet %}{{ setting.screen-pdf-stylesheet }}{% endcapture %}
        {% capture web-stylesheet %}{{ setting.web-stylesheet }}{% endcapture %}
        {% capture epub-stylesheet %}{{ setting.epub-stylesheet }}{% endcapture %}
        {% capture app-stylesheet %}{{ setting.app-stylesheet }}{% endcapture %}
    {% endfor %}

{% endif %}

{% comment %} Generate a file-list for the current output. {% endcomment %}
{% capture file-list-name %}{{ site.output }}-file-list{% endcapture %}

{% comment %} Don't indent. We don't want indents in file lists.
File-list entries can be hashes. For file-list, we want only filenames,
so we have to iterate over the entry, in case it's a key-value pair. {% endcomment %}
{% capture file-list %}
{% for file-entry in [file-list-name] %}
{% for string in file-entry %}
{% if string[0] %}
{{ string[0] }}.html
{% else %}
{{ string }}.html
{% endif %}
{% endfor %}
{% endfor %}
{% endcapture %}

{% comment %}
Check if we're on the project homepage:
* Get a slugified version of the page URL, without hyphens, to compare to
  a slugified version of the baseurl. We slugify to remove slashes, which
  may differ between the two.
* Then we can compare them to test if we're on the project home page.
* If we are, they will match. Hopefully.
{% endcomment %}
{% capture pageurl-slug %}{{ site.baseurl | slugify | remove: "-" }}{{ page.url | slugify | remove: "-" }}{% endcapture %}
{% capture baseurl-slug %}{{ site.baseurl | slugify | remove: "-" }}{% endcapture %}

{% assign is-homepage = false %}
{% if pageurl-slug == baseurl-slug %}
    {% assign is-homepage = true %}
{% endif %}

{% comment %}
Check if we're on the search pages.
{% endcomment %}
{% capture project-search-url %}{{ site.baseurl }}/search.html{% endcapture %}
{% unless is-homepage or is-translation-homepage %}
    {% capture book-search-url %}{{ site.baseurl }}/{{ book-directory }}/search.html{% endcapture %}
{% endunless %}
{% capture project-search-url-slug %}{{ project-search-url | slugify | remove: "-" }}{% endcapture %}
{% capture book-search-url-slug %}{{ book-search-url | slugify | remove: "-" }}{% endcapture %}

{% assign is-search = false %}
{% if page.url contains "/search.html" %}
    {% assign is-search = true %}
{% endif %}

{% assign is-project-search = false %}
{% if pageurl-slug == project-search-url-slug %}
    {% assign is-project-search = true %}
{% endif %}

{% assign is-book-search = false %}
{% if pageurl-slug == book-search-url-slug and is-homepage != true and is-translation-homepage != true %}
    {% assign is-book-search = true %}
{% endif %}

{% comment %}
On homepage and project-search we are not in a book-directory,
so make the book-directory variable nil. If we don't,
then on these pages any links that use {{ book-directory }} will be broken
{% endcomment %}
{% if is-homepage == true or is-translation-homepage == true or is-project-search == true %}
    {% assign book-directory = nil %}
{% endif %}

{% comment %}
Create an empty array for the breadcrumbs include to start with
(thanks https://talk.jekyllrb.com/t/how-do-you-add-items-to-an-array-in-jekyll/324/4)
{% endcomment %}
{% assign crumbs-array = "" | split: "|" %}

{% comment %}
Get relative paths to other book-asset folders, even if we're in a book-subdirectory
{% endcomment %}

{% comment %}First, for pages not in a book directory, set the path as
the first book-directory `_data/works`{% endcomment %}
{% capture path-to-book-directory %}{{ site.data.works[0] }}/{% endcapture %}
{% if is-translation-homepage %}
    {% capture path-to-book-directory %}../{{ site.data.works[0] }}/{% endcapture %}
{% endif %}

{% comment %} Then, for pages in a book directory,
there is no path because we're already there. {% endcomment %}
{% if is-book-directory and page.path contains ".md" %}
    {% capture path-to-book-directory %}{% endcapture %}
{% endif %}

{% comment %}Then, for all pages in a book subdirectory,
create a relative path to the book-directory{% endcomment %}
{% if is-book-subdirectory %}
    {% capture path-to-book-directory %}../{% endcapture %}
{% endif %}

{% comment %}Then set a path to the root directory.{% endcomment %}

{% capture path-to-root-directory %}
    {% for i in (1..folder-depth) %}../{% endfor %}
{% endcapture %}
{% capture path-to-root-directory %}{{ path-to-root-directory | strip_newlines | strip }}{% endcapture %}

{% comment %}If we're in the root directory, then the path is the baseurl.
If we're on the web, we need a trailing slash on the baseurl, to
be sure we're pointing to the webserver root.{% endcomment %}
{% if path-to-root-directory == "" %}
{% assign is-root-directory = true %}
{% capture path-to-root-directory %}{{ site.baseurl }}{% endcapture %}
    {% if site.output == "web" %}
        {% capture path-to-root-directory %}{{ site.baseurl }}/{% endcapture %}
    {% endif %}
{% endif %}

{% comment %}Create a short tag for the path to images,
where the default is the root assets/images folder.{% endcomment %}
{% capture images %}{{ path-to-root-directory }}assets/{{ site.image-set }}{% endcapture %}
{% if is-book-directory %}
    {% capture images %}{{ path-to-book-directory }}{{ site.image-set }}{% endcapture %}
{% endif %}

{% comment %}
If site.build-language is defined, and matches a translation directory,
include the translation directory in the default images path.
This is especially useful for setting the images path on non-book pages,
such as the home and search pages, when building a single-language site or app.
{% endcomment %}
{% for translation in translations %}
    {% if site.build-language == translation %}
        {% assign build-language-is-translation = true %}
    {% endif %}
{% endfor %}
{% if site.build-language and site.build-language != "" and build-language-is-translation == true %}
    {% capture images %}{{ path-to-book-directory }}{{ site.build-language }}/{{ site.image-set }}{% endcapture %}
{% endif %}

{% comment %}If this is a translation, and a language subfolder of images exists,
the {{ images }} path should include the language subdirectory.{% endcomment %}
{% if is-translation %}
    {% capture path-to-translation-images-directory %}/{{ book-directory }}/{{ book-subdirectory }}/images/{{ site.output }}/{% endcapture %}
    {% if is-translation-homepage %}
        {% capture path-to-translation-images-directory %}/{{ site.data.works[0] }}/{{ language }}/images/{{ site.output }}/{% endcapture %}
    {% endif %}

    {% assign translated-images = site.static_files | where_exp: "file", "file.path contains path-to-translation-images-directory" %}
    {% assign translated-images-number = translated-images | size %}

    {% assign translated-images-exist = false %}
    {% if translated-images-number > 0 %}
        {% assign translated-images-exist = true %}
    {% endif %}

    {% comment %}If we are using external-media, we can't know
    if translated images exist, so let's assume that they do.{% endcomment %}
    {% if site.data.settings.local-media or site.data.settings.remote-media %}
        {% assign translated-images-exist = true %}
    {% endif %}

    {% if translated-images-exist == true %}
        {% capture images %}{{ path-to-book-directory }}{{ book-subdirectory }}/{{ site.image-set }}{% endcapture %}
    {% endif %}
{% endif %}


{% comment %}For PDF and web outputs, check if we are using external-media,
and if we are, get the relevant path as `external-media`, defaulting to
remote-media for web and local-media for PDF.{% endcomment %}
{% if site.output == "print-pdf" or site.output == "screen-pdf" %}
    {% if site.data.settings.local-media.[build] and site.data.settings.local-media.[build] != "" %}
        {% capture external-media %}{% unless site.data.settings.local-media.[build] contains "http" %}{{ path-to-root-directory }}{% endunless %}{{ site.data.settings.local-media.[build] }}{% endcapture %}
    {% elsif site.data.settings.remote-media.[build] and site.data.settings.remote-media.[build] != "" %}
        {% capture external-media %}{{ site.data.settings.remote-media.[build] }}{% endcapture %}
    {% endif %}
{% endif %}
{% if site.output == "web" %}
    {% if site.data.settings.remote-media.[build] and site.data.settings.remote-media.[build] != "" %}
        {% capture external-media %}{{ site.data.settings.remote-media.[build] }}{% endcapture %}
    {% elsif site.data.settings.local-media.[build] and site.data.settings.local-media.[build] != "" %}
        {% capture external-media %}{% unless site.data.settings.local-media.[build] contains "http" %}{{ path-to-root-directory }}{% endunless %}{{ site.data.settings.local-media.[build] }}{% endcapture %}
    {% endif %}
{% endif %}

{% comment %}If we're using external media, set `images` accordingly.{% endcomment %}
{% if external-media and external-media != "" %}
    {% capture images %}{{ external-media }}/{{ book-directory }}/{{ site.image-set }}{% endcapture %}
    {% if is-translation %}
        {% capture images %}{{ external-media }}/{{ book-directory }}/{{ book-subdirectory }}/{{ site.image-set }}{% endcapture %}
    {% endif %}
    {% comment %}If we are not in a book directory, use the images
    from the first book in the project.{% endcomment %}
    {% if is-root-directory == true %}
        {% capture images %}{{ external-media }}/{{ site.data.works[0] }}/{{ site.image-set }}{% endcapture %}
    {% endif %}
    {% if is-translation-homepage %}
        {% capture images %}{{ external-media }}/{{ site.data.works[0] }}/{{ site.image-set }}{% endcapture %}
    {% endif %}
{% endif %}

{% comment %}If using a Google Play expansion file for images,
and this is an app output, rewrite the images path accordingly{% endcomment %}
{% assign google-play-expansion-file-enabled = false %}
{% if site.data.settings.app.google-play-expansion-file-enabled == true and site.output == "app" %}
    {% assign google-play-expansion-file-enabled = true %}
    {% capture images %}content://{{ project-app-id }}{% if site.build-language and site.build-language != "" %}.{{ site.build-language }}{% endif %}.expansion{% endcapture %}
{% endif %}

{% comment %}Create a tag for the path to stylesheets.
First, the default. Then if a translation, the translation's.{% endcomment %}
{% capture path-to-styles-directory %}{{ path-to-book-directory }}styles{% endcapture %}

{% if is-translation %}
    {% if site.output == "print-pdf" %}
        {% capture path-to-translation-stylesheet %}/{{ book-directory }}/{{ book-subdirectory }}/styles/{{ print-pdf-stylesheet }}{% endcapture %}
    {% elsif site.output == "screen-pdf" %}
        {% capture path-to-translation-stylesheet %}/{{ book-directory }}/{{ book-subdirectory }}/styles/{{ screen-pdf-stylesheet }}{% endcapture %}
    {% elsif site.output == "epub" %}
        {% capture path-to-translation-stylesheet %}/{{ book-directory }}/{{ book-subdirectory }}/styles/{{ epub-stylesheet }}{% endcapture %}
    {% elsif site.output == "app" %}
        {% capture path-to-translation-stylesheet %}/{{ book-directory }}/{{ book-subdirectory }}/styles/{{ app-stylesheet }}{% endcapture %}
        {% if is-translation-homepage %}
            {% capture path-to-translation-stylesheet %}/{{ site.data.works[0] }}/{{ language }}/styles/{{ app-stylesheet }}/{% endcapture %}
        {% endif %}
    {% else %}
        {% capture path-to-translation-stylesheet %}/{{ book-directory }}/{{ book-subdirectory }}/styles/{{ web-stylesheet }}{% endcapture %}
        {% if is-translation-homepage %}
            {% capture path-to-translation-stylesheet %}/{{ site.data.works[0] }}/{{ language }}/styles/{{ web-stylesheet }}/{% endcapture %}
        {% endif %}
    {% endif %}
    {% assign translation-styles = site.pages | where_exp: "file", "file.url contains path-to-translation-stylesheet" %}
    {% assign translation-styles-number = translation-styles | size %}

    {% assign translation-styles-exist = false %}
    {% if translation-styles-number > 0 %}
        {% assign translation-styles-exist = true %}
    {% endif %}

    {% if translation-styles-exist == true %}
        {% capture path-to-parent-styles-directory %}{{ path-to-styles-directory }}{% endcapture %}
        {% capture path-to-styles-directory %}{{ path-to-book-directory }}{{ book-subdirectory }}/styles{% endcapture %}
    {% endif %}
{% endif %}

{% comment %}Create a tag for the path to fonts.{% endcomment %}
{% capture path-to-fonts-directory %}{{ path-to-book-directory }}fonts{% endcapture %}

{% if is-translation %}
    {% capture path-to-translation-fonts-directory %}/{{ book-directory }}/{{ book-subdirectory }}/fonts{% endcapture %}
    {% if is-translation-homepage %}
        {% capture path-to-translation-fonts-directory %}/{{ site.data.works[0] }}/{{ language }}/fonts{% endcapture %}
    {% endif %}

    {% assign translation-fonts = site.static_files | where_exp: "file", "file.path contains path-to-translation-fonts-directory" %}
    {% assign translation-fonts-number = translation-fonts | size %}

    {% assign translation-fonts-exist = false %}
    {% if translation-fonts-number > 0 %}
        {% assign translation-fonts-exist = true %}
    {% endif %}

    {% if translation-fonts-exist == true %}
        {% capture path-to-fonts-directory %}{{ path-to-book-directory }}{{ book-subdirectory }}/fonts{% endcapture %}
    {% endif %}
{% endif %}

{% comment %} Are we outputting the docs? {% endcomment %}
{% for coll in site.collections %}
  {% if coll.output == true and coll.label == "docs" %}
    {% assign output-docs = true %}
    {% break %}
  {% endif %}
{% endfor %}

{% comment %} Is the template in its new state?
Let's check a bunch of things that, in combination, should
guarantee that the template is in a new state. {% endcomment %}
{% if output-docs == true and number-of-works == 2 and site.data.works[0].default.title == "Template" and site.data.works[0] == "book" and site.data.works[1].default == "samples" %}
  {% assign is-new-template = true %}
{% endif %}

{% comment %}Are we on a docs page?{% endcomment %}
{% assign is-docs-page = false %}
{% if page.collection == "docs" %}
  {% assign is-docs-page = true %}
{% endif %}

{% comment %}Check if epub Javascript is disabled.{% endcomment %}
{% if site.data.settings.epub.javascript.disabled == true %}
    {% assign epub-scripts-disabled = true %}
{% endif %}

{% comment %} Localisation {% endcomment %}

{% assign languages = parent-language | split: "," %}

{% if translations.size > 0 %}

    {% comment %} Get an array of all languages included
    as translations in `_data/works`, and add to the parent language {% endcomment %}
    {% for translation in translations %}
        {% assign languages = languages | push: translation | uniq %}
    {% endfor %}

{% endif %}

{% comment %} Get the locales {% endcomment %}
{% assign locales = site.data.locales %}

{% comment %} Put this page's particular language
in a locale variable {% endcomment %}
{% assign locale = locales[language] %}

{% comment %} Override project metadata with locale translations,
or parent-language overrides, if they exist. {% endcomment %}
{% if locale.project.organisation and locale.project.organisation != "" %}
    {% capture project-organisation %}{{ locale.project.organisation }}{% endcapture %}
{% endif %}
{% if locale.project.url and locale.project.url != "" %}
    {% capture project-url %}{{ locale.project.url }}{% endcapture %}
{% endif %}
{% if locale.project.email and locale.project.email != "" %}
    {% capture project-email %}{{ locale.project.email }}{% endcapture %}
{% endif %}
{% if locale.project.name and locale.project.name != "" %}
    {% capture project-name %}{{ locale.project.name }}{% endcapture %}
{% endif %}
{% if locale.project.description and locale.project.description != "" %}
    {% capture project-description %}{{ locale.project.description }}{% endcapture %}
{% endif %}
{% if locale.project.image and locale.project.image != "" %}
    {% capture project-image %}{{ locale.project.image }}{% endcapture %}
{% endif %}
{% if locale.project.credit and locale.project.credit != "" %}
    {% capture project-credit %}{{ locale.project.credit }}{% endcapture %}
{% endif %}

{% comment %}End of entire metadata load.{% endcomment %}
{% assign metadata-loaded = true %}
{% endif %}
